--In this SQL, I am querying a database with multiple tables to quantify statistics about customer and order data.

--View the dataset and exclude invalid entries
SELECT * FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--How many orders were placed in January?
SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--How many of those orders were for an iPhone?
SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderID) = 6
AND orderID <> 'Order ID';

--Select the customer account numbers for all the orders that were placed in February
SELECT DISTINCT acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales sales
ON cust.order_id = sales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT Product, price
FROM BIT_DB.JanSales
ORDER BY price asc LIMIT 1;

--What is the total revenue for each product sold in January?
SELECT SUM(quantity) * price as revenue
, Product
FROM BIT_DB.JanSales
GROUP BY Product; 

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, Quantity, SUM(Quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(DISTINCT cust.acctnum) AS customer_count, AVG(Quantity*price) AS average_spent
FROM BIT_DB.FebSales sales
LEFT JOIN BIT_DB.customers cust
ON sales.orderID = cust.order_id
WHERE sales.Quantity > 2
AND length(orderID) = 6
AND orderID <> 'Order ID';



